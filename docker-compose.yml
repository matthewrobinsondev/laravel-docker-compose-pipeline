version: '3.8'
services:
    app:
        container_name: app
        build:
            context: .
            target: php
        working_dir: /var/www/html
        volumes:
            -   ./:/var/www/html
        ports:
            - "8000:8000"
        depends_on:
            -   database
        networks:
            - laravel
    database:
        container_name: database
        image: mysql:8.0
        ports:
            - "3306:3306"
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            - ./docker/mysql:/docker-entrypoint-initdb.d
            - db-data:/var/lib/mysql
        networks:
            - laravel
    pma:
        container_name: pma
        image: phpmyadmin
        ports:
            - 9000:80
        environment:
            - PMA_HOST={$DB_HOST}
            - PMA_ARBITRARY=1
        networks:
            - laravel
    jenkins:
        image: jenkins/jenkins
        container_name: jenkins
        ports:
            - "8080:8080"
        networks:
            - laravel
    artisan:
        build:
            context: .
            target: php
        container_name: artisan
        volumes:
            - ./:/var/www/html:delegated
        depends_on:
            - database
        working_dir: /var/www/html
        entrypoint: [ 'php', '/var/www/html/artisan' ]
        networks:
            - laravel
    composer:
        image: composer:2.3.5
        container_name: composer
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        depends_on:
            - app
        entrypoint: [ 'composer', '--ignore-platform-reqs' ]
        networks:
            - laravel
volumes:
    db-data:
networks:
    laravel:
